
##########################---UserIncr Start---#######################
user_incr.v2.hdfs.dir=/user/log/hive/reg/

user_incr.v2.prepare.tmp.prefix = create table if not exists user_incr_tmp_
user_incr.v2.prepare.tmp.postfix = (appkey string,  platform string,  uid bigint,  report_timestamp bigint)  row format delimited fields terminated by  \'\\t\'
user_incr.v2.prepare = create table if not exists user_incr(appkey string, platform string, uid bigint, hms int)  partitioned by (month int, day int)  row format delimited fields terminated by \'\\t\'

user_incr.v2.load.prefix = load data inpath \'
user_incr.v2.load.postfix = \' into table user_incr_tmp_
user_incr.v2.load.insert = insert into table user_incr partition(month, day) select appkey, platform, uid, from_unixtime(cast(report_timestamp/1000 as int), \'HHmmss\'), from_unixtime(cast(report_timestamp/1000 as int), \'yyyyMM\'),from_unixtime(cast(report_timestamp/1000 as int), \'d\')  from user_incr_tmp_

#define indexName & index sql
user_incr.v2.stats.sql.prefix = select count(distinct uid) as cnt, appkey, platform from user_incr where 
user_incr.v2.stats.sql.postfix = group by appkey, platform 

user_incr.v2.clear.tmp = drop table user_incr_tmp_
##########################---UserIncr End---#######################



##########################---UserActive Start---#######################
user_active.v2.hdfs.dir=/user/log/hive/active/

user_active.v2.prepare.tmp.prefix = create table if not exists user_active_tmp_
user_active.v2.prepare.tmp.postfix=(appkey string, platform string,uid bigint,open int, active_time int, report_timestamp bigint) row format delimited fields terminated by \'\\t\'
user_active.v2.prepare =create table if not exists user_active( appkey string, platform string,uid bigint,open int,active_time int,hms int) partitioned by (month int, day int) row format delimited fields terminated by \'\\t\'

user_active.v2.load.prefix = load data inpath \'
user_active.v2.load.postfix = \' into table user_active_tmp_
user_active.v2.load.insert = insert  into table user_active partition(month, day) select appkey, platform, uid, open, active_time,from_unixtime(cast(report_timestamp/1000 as int), \'HHmmss\'), from_unixtime(cast(report_timestamp/1000 as int), \'yyyyMM\'),from_unixtime(cast(report_timestamp/1000 as int), \'d\') from user_active_tmp_

#define indexName & index sql 

user_startup.v2.stats.sql.prefix = select count(open) as cnt,appkey, platform from user_active where open=0 and 
user_startup.v2.stats.sql.postfix =  group by appkey, platform

user_duration.v2.stats.sql.prefix = select sum(active_time) as cnt,appkey, platform from user_active where open=0 and 
user_duration.v2.stats.sql.postfix =  group by appkey, platform

user_active.v2.stats.sql.prefix = select count(distinct uid) as cnt, appkey, platform from user_active where 1=1 and 
user_active.v2.stats.sql.postfix = group by appkey, platform


user_active.v2.clear.tmp = drop table if exists user_active_tmp_

##########################---UserActive End---#######################

##########################---UserOnline Start---#####################
user_online.v2.stats.hour.sql = select count(distinct uid) as cnt, appkey, platform from user_online_external t where year="{0}" and month="{1}" and day="{2}" and from_unixtime(cast(report_timestamp/1000 as int), \''HH'\') = "{3}" group by appkey, platform
user_online.v2.stats.day.sql = select count(distinct uid) as cnt, appkey, platform from user_online_external where year="{0}" and month="{1}" and day="{2}" group by appkey, platform
##########################---UserOnline End---#######################

##########################---ApnsReport Start---#####################
pushapns.v2.stats.hour.sql = select s.appkey appkey, (s.nums - COALESCE(r.nums,0L)) cnt, s.platform platform from (select appkey,nums,platform from (\
  select count(1) nums, appkey, regexp_replace(platform, \''[a, i, w]'\', \''apns'\') as platform, status from apns_report where year="{0}" and month="{1}" and day="{2}" and from_unixtime(itime, \''yyyyMMddHH'\')="{3}" group by appkey, platform,status) t \
  where status=\''success'\') s left join (select appkey, nums from (\
  select count(1) nums, appkey, regexp_replace(platform, \''[a, i, w]'\', \''apns'\') as platform, status from apns_report where year="{0}" and month="{1}" and day="{2}" and from_unixtime(itime, \''yyyyMMddHH'\')="{3}" group by appkey, platform,status) t \
  where status=\''response'\') r on s.appkey = r.appkey
pushapns.v2.stats.day.sql = select s.appkey appkey, (s.nums - COALESCE(r.nums,0L)) cnt, s.platform platform from (select appkey,nums,platform from (\
  select count(1) nums, appkey, regexp_replace(platform, \''[a, i, w]'\', \''apns'\') as platform, status from apns_report where year="{0}" and month="{1}" and day="{2}"  group by appkey, platform,status) t \
  where status=\''success'\') s left join (select appkey, nums from( \
  select count(1) nums, appkey, regexp_replace(platform, \''[a, i, w]'\', \''apns'\') as platform, status from apns_report where year="{0}" and month="{1}" and day="{2}"  group by appkey, platform,status) t \
  where status=\''response'\') r on s.appkey = r.appkey
pushapns.v2.prepare = alter table apns_report add if not exists partition(year="{0}", month="{1}", day="{2}") location "{3}"
##########################---ApnsReport End---#####################

##########################---MpnsReport Start---#####################
pushmpns.v2.stats.hour.sql = select count(1) as cnt, appkey, regexp_replace(platform, \''[a, i, w]'\', \''mpns'\') as platform from mpns_report t where year="{0}" and month="{1}" and day="{2}" and from_unixtime(itime, \''yyyyMMddHH'\') = "{3}" and status = 0 group by appkey, platform
pushmpns.v2.stats.day.sql = select count(1) as cnt, appkey, regexp_replace(platform, \''[a, i, w]'\', \''mpns'\') as platform from mpns_report  where year="{0}" and month="{1}" and day="{2}" and status = 0 group by appkey, platform
pushmpns.v2.prepare = alter table mpns_report add if not exists partition(year="{0}", month="{1}", day="{2}") location "{3}"
##########################---MpnsReport End---#####################

##########################---MsgRecv Start---#####################
pushmsgrecv.v2.stats.hour.sql = select count(1) as cnt, appkey, platform from msg_recv_app t where year="{0}" and month="{1}" and day="{2}" and from_unixtime(itime, \''yyyyMMddHH'\') = "{3}" group by appkey, platform
pushmsgrecv.v2.stats.day.sql = select count(1) as cnt, appkey, platform from msg_recv_app where year="{0}" and month="{1}" and day="{2}" group by appkey, platform
pushmsgrecv.v2.prepare = alter table msg_recv_app add if not exists partition(year="{0}", month="{1}", day="{2}", hour="{3}") location "{4}"

##########################---MsgRecv End---#####################

##########################---HttpReport Start---#####################
pushcalltimes.v2.stats.hour.sql = select count(*) as cnt, appkey from http_report t where year="{0}" and month="{1}" and day="{2}" and from_unixtime(itime, \''yyyyMMddHH'\') = "{3}" group by appkey
pushcalltimes.v2.stats.day.sql = select count(*) as cnt, appkey from http_report where year="{0}" and month="{1}" and day="{2}" group by appkey
pushcalltimes.v2.prepare = alter table http_report add if not exists partition(year="{0}", month="{1}", day="{2}") location "{3}"
pushcalltimesmax.v2.stats.hour.sql = from (select count(*) as nums, appkey from http_report where year="{0}" and month="{1}" and day="{2}" and from_unixtime(itime,\''yyyyMMddHH'\')="{3}" group by appkey, from_unixtime(itime,\''yyyyMMddHHmm'\')) t select max(nums) as cnt, appkey group by appkey
pushcalltimesmax.v2.stats.day.sql = from (select count(*) as nums, appkey from http_report where year="{0}" and month="{1}" and day="{2}" and from_unixtime(itime,\''yyyyMMdd'\')="{3}" group by appkey, from_unixtime(itime,\''yyyyMMddHHmm'\')) t select max(nums) as cnt, appkey group by appkey
##########################---HttpReport End---#####################

##########################---ClickTimes Start---#####################
pushclicktimes.v2.cp=dfs -cp {0}/{1} {2}/tmp
pushclicktimes.v2.rm=dfs -rm -f {0}/tmp/*
pushclicktimes.v2.stats.hour.sql = select count(*) as cnt, appkey, platform from user_click_repartition t where year="{0}" and month="{1}" and day="{2}" and hour="{3}" and click_type=1 group by appkey, platform
pushclicktimes.v2.stats.day.sql = select count(*) as cnt, appkey, platform from user_click_repartition where year="{0}" and month="{1}" and day="{2}" and click_type=1 group by appkey, platform
pushclicktimes.v2.prepare = alter table user_click add if not exists partition(year="{0}", month="{1}", day="{2}") location "{3}"
pushclicktimes.v2.repartition = insert overwrite table user_click_repartition partition(year,month,day, hour) select appkey,platform,mid,uid,itime,click_type,from_unixtime(itime, \''yyyy'\'),  from_unixtime(itime, \''MM'\'), from_unixtime(itime, \''dd'\'), from_unixtime(itime, \''HH'\') from user_click_tmp where from_unixtime(itime, \''yyyyMMdd'\')="{0}"
#########################---ClickTimes End---########################

##########################---Retention Start---#####################
retention.v2.stats.day.sql = select appkey, platform, kpi from t_d_retention where date={0} and internal={1}
##########################---Retention End---#####################